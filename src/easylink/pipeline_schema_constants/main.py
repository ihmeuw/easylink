"""
=============================
Main EasyLink Pipeline Schema
=============================
"""

from easylink.graph_components import (
    EdgeParams,
    InputSlot,
    InputSlotMapping,
    OutputSlot,
    OutputSlotMapping,
)
from easylink.step import (
    EmbarrassinglyParallelStep,
    HierarchicalStep,
    InputStep,
    LoopStep,
    OutputStep,
    ParallelStep,
    Step,
)
from easylink.utilities.aggregator_utils import concatenate_datasets
from easylink.utilities.splitter_utils import split_data_by_size
from easylink.utilities.validation_utils import (
    dont_validate,
    validate_clusters,
    validate_ids_to_remove,
    validate_input_datasets,
    validate_links,
)

NODES = [
    InputStep(output_slots=[
        OutputSlot("input_datasets"),
        OutputSlot("known_clusters")
    ]),
    LoopStep(
        template_step=HierarchicalStep(
            step_name="entity_resolution",
            input_slots=[
                InputSlot(
                    name="input_datasets",
                    env_var="INPUT_DATASETS_FILE_PATHS",
                    validator=validate_input_datasets,
                ),
                InputSlot(
                    name="known_clusters",
                    env_var="KNOWN_CLUSTERS_FILE_PATHS",
                    validator=validate_clusters,
                ),
            ],
            output_slots=[OutputSlot("clusters")],
            nodes=[
                ParallelStep(
                    # NOTE: Splitters/aggregators on the ParallelStep are implicit!
                    template_step=EmbarrassinglyParallelStep(
                        slot_splitter_mapping={"input_datasets": split_data_by_size},
                        step=Step(
                            step_name="eliminating_records",
                            input_slots=[
                                InputSlot(
                                    name="input_datasets",
                                    env_var="INPUT_DATASETS_FILE_PATHS",
                                    validator=validate_input_datasets,
                                ),
                                InputSlot(
                                    name="clusters",
                                    env_var="CLUSTERS_FILE_PATHS",
                                    validator=validate_clusters,
                                ),
                            ],
                            output_slots=[OutputSlot("ids_to_remove")],
                        ),
                        slot_aggregator_mapping={"ids_to_remove": concatenate_datasets},
                    )
                ),
                Step(
                    step_name="removing_records",
                    input_slots=[
                        InputSlot(
                            name="input_datasets",
                            env_var="INPUT_DATASETS_FILE_PATHS",
                            validator=validate_input_datasets,
                        ),
                        InputSlot(
                            name="ids_to_remove",
                            env_var="IDS_TO_REMOVE_FILE_PATHS",
                            validator=validate_ids_to_remove,
                        ),
                    ],
                    output_slots=[OutputSlot("datasets")],
                ),
                HierarchicalStep(
                    step_name="clustering",
                    input_slots=[
                        InputSlot(
                            name="datasets",
                            env_var="DATASETS_FILE_PATHS",
                            # TODO: Can't validate these are subsets of
                            # the original input without adding a dependency
                            validator=validate_input_datasets,
                        ),
                        InputSlot(
                            name="known_clusters",
                            env_var="KNOWN_CLUSTERS_FILE_PATHS",
                            validator=validate_clusters,
                        ),
                    ],
                    output_slots=[OutputSlot("new_clusters")],
                    nodes=[
                        Step(
                            step_name="clusters_to_links",
                            input_slots=[
                                InputSlot(
                                    name="known_clusters",
                                    env_var="KNOWN_CLUSTERS_FILE_PATHS",
                                    validator=validate_clusters,
                                ),
                            ],
                            output_slots=[OutputSlot("known_links")],
                        ),
                        LoopStep(
                            template_step=Step(
                                step_name="linking",
                                input_slots=[
                                    InputSlot(
                                        name="datasets",
                                        env_var="DATASETS_FILE_PATHS",
                                        validator=validate_input_datasets,
                                    ),
                                    InputSlot(
                                        name="known_links",
                                        env_var="KNOWN_LINKS_FILE_PATHS",
                                        validator=validate_links,
                                    ),
                                ],
                                output_slots=[OutputSlot("links")],
                            ),
                            self_edges=[
                                EdgeParams(
                                    source_node="linking",
                                    target_node="linking",
                                    output_slot="links",
                                    input_slot="known_links",
                                )
                            ],
                        ),
                        Step(
                            step_name="links_to_clusters",
                            input_slots=[
                                InputSlot(
                                    name="links",
                                    env_var="LINKS_FILE_PATHS",
                                    validator=validate_links,
                                ),
                            ],
                            output_slots=[OutputSlot("clusters")],
                        ),
                    ],
                    edges=[
                        EdgeParams(
                            source_node="clusters_to_links",
                            target_node="linking",
                            output_slot="known_links",
                            input_slot="known_links",
                        ),
                        EdgeParams(
                            source_node="linking",
                            target_node="links_to_clusters",
                            output_slot="links",
                            input_slot="links",
                        ),
                    ],
                    input_slot_mappings=[
                        InputSlotMapping(
                            parent_slot="datasets",
                            child_node="linking",
                            child_slot="datasets",
                        ),
                        InputSlotMapping(
                            parent_slot="known_clusters",
                            child_node="clusters_to_links",
                            child_slot="known_clusters",
                        ),
                    ],
                    output_slot_mappings=[
                        OutputSlotMapping(
                            parent_slot="new_clusters",
                            child_node="links_to_clusters",
                            child_slot="clusters",
                        ),
                    ],
                ),
                Step(
                    step_name="updating_clusters",
                    input_slots=[
                        InputSlot(
                            name="known_clusters",
                            env_var="KNOWN_CLUSTERS_FILE_PATHS",
                            validator=validate_clusters,
                        ),
                        InputSlot(
                            name="new_clusters",
                            env_var="NEW_CLUSTERS_FILE_PATHS",
                            validator=validate_clusters,
                        ),
                    ],
                    output_slots=[OutputSlot("clusters")],
                ),
            ],
            edges=[
                EdgeParams(
                    source_node="eliminating_records",
                    target_node="removing_records",
                    output_slot="ids_to_remove",
                    input_slot="ids_to_remove",
                ),
                EdgeParams(
                    source_node="removing_records",
                    target_node="clustering",
                    output_slot="datasets",
                    input_slot="datasets",
                ),
                EdgeParams(
                    source_node="clustering",
                    target_node="updating_clusters",
                    output_slot="new_clusters",
                    input_slot="new_clusters",
                ),
            ],
            input_slot_mappings=[
                InputSlotMapping(
                    parent_slot="input_datasets",
                    child_node="eliminating_records",
                    child_slot="input_datasets",
                ),
                InputSlotMapping(
                    parent_slot="clusters",
                    child_node="eliminating_records",
                    child_slot="clusters",
                ),
                InputSlotMapping(
                    parent_slot="input_datasets",
                    child_node="removing_records",
                    child_slot="input_datasets",
                ),
                InputSlotMapping(
                    parent_slot="clusters",
                    child_node="clustering",
                    child_slot="known_clusters",
                ),
                InputSlotMapping(
                    parent_slot="clusters",
                    child_node="updating_clusters",
                    child_slot="known_clusters",
                ),
            ],
            output_slot_mappings=[
                OutputSlotMapping(
                    child_node="updating_clusters",
                    child_slot="clusters",
                    parent_slot="clusters",
                ),
            ],
        ),
        self_edges=[
            EdgeParams(
                source_node="entity_resolution",
                target_node="entity_resolution",
                output_slot="clusters",
                input_slot="known_clusters",
            )
        ],
    ),
    Step(
        step_name="canonicalizing_and_downstream_analysis",
        input_slots=[
            InputSlot(
                name="input_datasets",
                env_var="INPUT_DATASETS_FILE_PATHS",
                validator=validate_input_datasets,
            ),
            InputSlot(
                name="clusters",
                env_var="CLUSTERS_FILE_PATHS",
                validator=validate_clusters,
            ),
        ],
        output_slots=[OutputSlot("analysis_output")],
    ),
    OutputStep(
        input_slots=[
            InputSlot(name="analysis_output", env_var=None, validator=dont_validate)
        ],
    ),
]
EDGES = [
    EdgeParams(
        source_node="input_data",
        target_node="entity_resolution",
        output_slot="input_datasets",
        input_slot="input_datasets",
    ),
    EdgeParams(
        source_node="input_data",
        target_node="entity_resolution",
        output_slot="known_clusters",
        input_slot="known_clusters",
    ),
    EdgeParams(
        source_node="input_data",
        target_node="canonicalizing_and_downstream_analysis",
        output_slot="input_datasets",
        input_slot="input_datasets",
    ),
    EdgeParams(
        source_node="entity_resolution",
        target_node="canonicalizing_and_downstream_analysis",
        output_slot="clusters",
        input_slot="clusters",
    ),
    EdgeParams(
        source_node="canonicalizing_and_downstream_analysis",
        target_node="results",
        output_slot="analysis_output",
        input_slot="analysis_output",
    ),
]
SCHEMA_PARAMS = (NODES, EDGES)
